name: Backup all repos

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * * # Daily

permissions:
  contents: read

jobs:
  create-codecommit-repos:
    name: Create CodeCommit repos
    runs-on: ubuntu-22.04

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_CODECOMMIT_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CODECOMMIT_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create repos
        run: |
          github_repos=$(gh api -X GET search/repositories --paginate -f q='org:exercism is:public archived:false' --jq '.items[].name')
          codecommit_repos=$(aws codecommit list-repositories | jq -r '.repositories[] | .repositoryName')
          missing_codecommit_repos=$(comm -23 <(echo "${github_repos}" | sort) <(echo "${codecommit_repos}" | sort))

          for repo in $missing_codecommit_repos; do
            aws codecommit create-repository --repository-name $repo
          done
        env:
          GH_TOKEN: ${{ github.token }}

  fetch-github-repos:
    name: Fetch GitHub repos
    runs-on: ubuntu-22.04

    outputs:
      track-repos: ${{ steps.fetch-track-repos.outputs.track-repos }}
      tooling-repos: ${{ steps.fetch-tooling-repos.outputs.tooling-repos }}
      other-repos: ${{ steps.fetch-other-repos.outputs.other-repos }}

    steps:
      - name: Fetch track repos
        id: fetch-track-repos
        run: |
          track_repos=$(gh api -X GET --paginate search/repositories -f q='org:exercism is:public archived:false topic:exercism-track' --jq '[.items[] | .name]' | tr -d '\n')
          echo "track-repos=${track_repos}" >> "${GITHUB_OUTPUT}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Fetch tooling repos
        id: fetch-tooling-repos
        run: |
          tooling_repos=$(gh api -X GET --paginate search/repositories -f q='org:exercism is:public archived:false topic:exercism-tooling' --jq '[.items[] | .name]' | tr -d '\n')
          echo "tooling-repos=${tooling_repos}" >> "${GITHUB_OUTPUT}"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Fetch other repos
        id: fetch-other-repos
        run: |
          other_repos=$(gh api -X GET --paginate search/repositories -f q='org:exercism is:public archived:false -topic:exercism-track -topic:exercism-tooling' --jq '[.items[] | .name]' | tr -d '\n')
          echo "other-repos=${other_repos}" >> "${GITHUB_OUTPUT}"
        env:
          GH_TOKEN: ${{ github.token }}

  backup-track-repos:
    name: Backup
    needs:
      - create-codecommit-repos
      - fetch-github-repos

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        repo: ${{ fromJson(needs.fetch-github-repos.outputs.track-repos) }}

    uses: exercism/backup/.github/workflows/backup.yml@main
    secrets: inherit
    with:
      repo: ${{ matrix.repo }}

  backup-tooling-repos:
    name: Backup
    needs:
      - create-codecommit-repos
      - fetch-github-repos

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        repo: ${{ fromJson(needs.fetch-github-repos.outputs.tooling-repos) }}

    uses: exercism/backup/.github/workflows/backup.yml@main
    secrets: inherit
    with:
      repo: ${{ matrix.repo }}

  backup-other-repos:
    name: Backup
    needs:
      - create-codecommit-repos
      - fetch-github-repos

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        repo: ${{ fromJson(needs.fetch-github-repos.outputs.other-repos) }}

    uses: exercism/backup/.github/workflows/backup.yml@main
    secrets: inherit
    with:
      repo: ${{ matrix.repo }}
